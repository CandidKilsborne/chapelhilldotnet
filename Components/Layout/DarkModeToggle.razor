@inject IJSRuntime JSRuntime

<button @onclick="ToggleDarkMode"
        class="inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background hover:bg-accent hover:text-accent-foreground h-10 w-10"
        aria-label="@(IsDarkMode ? "Switch to light mode" : "Switch to dark mode")">
    @if (IsDarkMode)
    {
        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="12" cy="12" r="4"/>
            <path d="M12 2v2"/>
            <path d="M12 20v2"/>
            <path d="M4.93 4.93l1.41 1.41"/>
            <path d="M17.66 17.66l1.41 1.41"/>
            <path d="M2 12h2"/>
            <path d="M20 12h2"/>
            <path d="M4.93 19.07l1.41-1.41"/>
            <path d="M17.66 6.34l1.41-1.41"/>
        </svg>
    }
    else
    {
        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
        </svg>
    }
</button>

@code {
    private bool IsDarkMode { get; set; }
    private bool isFirstRender = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var darkMode = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "darkMode");
            IsDarkMode = darkMode == "true";
            await UpdateDarkMode(IsDarkMode);
            isFirstRender = false;
            StateHasChanged();
        }
    }

    private async Task ToggleDarkMode()
    {
        IsDarkMode = !IsDarkMode;
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "darkMode", IsDarkMode.ToString().ToLower());
        await UpdateDarkMode(IsDarkMode);
    }

    private async Task UpdateDarkMode(bool isDark)
    {
        await JSRuntime.InvokeVoidAsync("eval", $"document.documentElement.classList.toggle('dark', {isDark.ToString().ToLower()})");
    }
}